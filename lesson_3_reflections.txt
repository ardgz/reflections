When would you want to use a remote repository rather than keeping all your work local?

I would use a remote repository when I'm working on a programming project from
multiple computers and/or with multiple people. This is so that all files and
commits are stored in one main repository.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

We should always pull changes manually because when we work on files from
a repository, we should be able to add our changes to our files and pull
changes from the remote repository only when we want to. If Git
automatically pulls updates from the remote repository regularly, it would
interrupt our workflow and our files can be changed at anytime while we are
editing them. This would cause confusion on what was changes were made and
whether we made them or someone else did. It's kind of like working on a 
drawing and all of a sudden other people decide to draw on it while we are
working on it or without our approval.

Describe the differences between forks, clones, and branches. When would you
use one instead of another?

Fork copies another persons repository on github to create a copy on your
github that you can edit and change freely. Cloning copies a repository from
one place to somewhere on your computer. Branches are different versions of
commits for a repository. You would fork to create your own version of
someone else's repository to keep on github. You would clone to have a copy
of a repository on your computer so that you can push any updates back to your
github for yourself or others. You would use branches to create different
versions of files for your repository that are different from your official
version. 

What is the benefit of having a copy of the last known state of the remote
stored locally?

If we have a copy of the last known state of the remote branch, we can make
commits to it with our own changes, and we can use git to be able to
compare our repository history to our remote repository. That way when we are
collaborating with others, we can just merge our changes when it comes time
to pull our changes from the remote.
