What happens when you initialize a repository? Why do you need to do it?

It will create a git repository out of your current directory. This will allow
you to be able to commit your files so that you can start saving different
states of your files.

How is the staging area different from the working directory and the
respository? What value do you think it offers?

The staging area contains files that have a logical change made and 
are prepared to go into an immediate future commit. The working directory
contains files that are incomplete and a repository contains all files of
a single project. The staging area provides the value of containing only
files that are connected by a single logical change.

How can you use the staging area to make sure you have one commit per
logical change?

I would only add my files to the staging area if that file contains a logical
change I have made and will only add more files if their logical changes
are the same or related.

What are some situations when branches would be helpful in keeping your
history organized? How would branches help?

Branches would be helpful in situations where I need to have different
versions of my program such as a foreign language version or a
development version. Branches can help keep track of different versions of
your program so that you don't have to manually do it.

How do the diagrams help you visualize the branch structure?

The diagrams show a picture of the branches and the commits that each
of them contain. This helps us visualize how the the commits and the
branches are connected.

What is the result of merging two branches together? Why do we represent it
in the diagram the way we do?

Merging two branches saves all the changes made by both branches and combines
them so so that the files in the repository contains changes from both
branches. The diagram was drawn in the way I described so that we can see
visually how merging works.
